{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desarrollo WEB\\\\HENRY\\\\Curso Full Time\\\\Proyecto de Integracion\\\\rick_and_morty\\\\src\\\\components\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport styles from \"../../assets/styles/components/Form/Form.module.css\";\n// import validation from './validation';\nimport { validateEmail, validatePass } from './validation';\n\n// const validateEmail=(form,setErrors,errors)=>{\n\n//     if(!form.email){\n//         setErrors({...errors,email:\"Email Vacio\"});\n//     }else{\n//         if(form.email.length < 35){\n//             if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.email)){\n//                 setErrors({...errors,email:\"\"});\n//             }else{\n//                 setErrors({...errors,email:\"Email inválido\"});\n//             }\n//         }else{\n//             setErrors({...errors,email:\"Supera los 35 caracteres\"});\n//         }\n\n//     }\n// }\n\n// const validatePass=(form,setErrors,errors)=>{\n//     if(!form.password){\n//         setErrors({...errors,password:\"Password vacio\"})\n//     }else{\n//         if(form.password.length < 6 || form.password.length > 10){\n//             setErrors({...errors,password:\"Debe tener entre 6 y 10 caracteres\"})\n//         }else{\n//             if(!form.password.match(/\\d/)){\n//                 setErrors({...errors,password:\"Debe tener al menos un numero\"})\n//             }else{\n//                 setErrors({...errors,password:\"\"})\n//             }\n//         }\n//     }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  //Creo el estado para el formulario\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  //Creo un formulario para los errores\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  //Funcion para enviar el email\n  const submitHandler = event => {\n    event.preventDefault();\n    if (form.email !== \"\" && form.password !== \"\") {\n      alert(\"Login Exitoso :)\");\n      setForm({\n        ...form,\n        email: \"\",\n        password: \"\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        password: \"todos los campos son obligatorios\"\n      });\n    }\n    setTimeout(() => {\n      setErrors({\n        ...errors,\n        password: \"\"\n      });\n    }, 2000);\n  };\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  const username = 'ejemplo@gmail.com';\n  const password = '1password';\n  function login(userData) {\n    if (userData.password === password && userData.username === username) {\n      setAccess(true);\n      navigate('/home');\n    }\n  }\n\n  //Esta funcion va escribiendo en tiempo real\n  //los atributos del formulario en el estado\n\n  const handleChange = event => {\n    const property = event.target.name;\n    const value = event.target.value;\n    setForm({\n      ...form,\n      [property]: value\n    });\n    // validation({...form, [property]:value},errors,setErrors);\n    if (property === \"email\") {\n      validateEmail({\n        ...form,\n        [property]: value\n      }, setErrors, errors);\n    } else {\n      validatePass({\n        ...form,\n        [property]: value\n      }, setErrors, errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email aqui....\",\n          type: \"text\",\n          name: \"email\",\n          value: form.email,\n          onChange: handleChange,\n          className: `${errors.email ? styles.error : styles.success}  ${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorSpan,\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contentPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password aqui...\",\n          type: \"password\",\n          name: \"password\",\n          value: form.password,\n          onChange: handleChange,\n          className: `${errors.password ? styles.error : styles.success} ${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.errorSpan,\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        on: true,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"na8aZNJz0czVYsCzjBdKZrOb99U=\", true);\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","styles","validateEmail","validatePass","jsxDEV","_jsxDEV","Form","_s","form","setForm","email","password","errors","setErrors","submitHandler","event","preventDefault","alert","setTimeout","navigate","useNavigate","access","setAccess","username","login","userData","handleChange","property","target","name","value","children","onSubmit","className","contentEmail","label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","error","success","input","errorSpan","contentPassword","button","on","_c","$RefreshReg$"],"sources":["C:/Desarrollo WEB/HENRY/Curso Full Time/Proyecto de Integracion/rick_and_morty/src/components/Form/Form.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport styles from \"../../assets/styles/components/Form/Form.module.css\";\r\n// import validation from './validation';\r\nimport { validateEmail, validatePass } from './validation';\r\n\r\n\r\n// const validateEmail=(form,setErrors,errors)=>{\r\n\r\n//     if(!form.email){\r\n//         setErrors({...errors,email:\"Email Vacio\"});\r\n//     }else{\r\n//         if(form.email.length < 35){\r\n//             if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(form.email)){\r\n//                 setErrors({...errors,email:\"\"});\r\n//             }else{\r\n//                 setErrors({...errors,email:\"Email inválido\"});\r\n//             }\r\n//         }else{\r\n//             setErrors({...errors,email:\"Supera los 35 caracteres\"});\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n// const validatePass=(form,setErrors,errors)=>{\r\n//     if(!form.password){\r\n//         setErrors({...errors,password:\"Password vacio\"})\r\n//     }else{\r\n//         if(form.password.length < 6 || form.password.length > 10){\r\n//             setErrors({...errors,password:\"Debe tener entre 6 y 10 caracteres\"})\r\n//         }else{\r\n//             if(!form.password.match(/\\d/)){\r\n//                 setErrors({...errors,password:\"Debe tener al menos un numero\"})\r\n//             }else{\r\n//                 setErrors({...errors,password:\"\"})\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst Form = () => {\r\n    //Creo el estado para el formulario\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    //Creo un formulario para los errores\r\n    const [errors, setErrors] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    //Funcion para enviar el email\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (form.email !== \"\" && form.password !== \"\") {\r\n            alert(\"Login Exitoso :)\");\r\n            setForm({ ...form, email: \"\", password: \"\" });\r\n        } else {\r\n            setErrors({ ...errors, password: \"todos los campos son obligatorios\" })\r\n        }\r\n        setTimeout(() => {\r\n            setErrors({ ...errors, password: \"\" })\r\n        }, 2000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const [access, setAccess] = useState(false);\r\n    const username = 'ejemplo@gmail.com';\r\n    const password = '1password';\r\n\r\n    function login(userData) {\r\n        if (userData.password === password && userData.username === username) {\r\n            setAccess(true);\r\n            navigate('/home');\r\n        }\r\n    }\r\n\r\n    //Esta funcion va escribiendo en tiempo real\r\n    //los atributos del formulario en el estado\r\n\r\n    const handleChange = (event) => {\r\n        const property = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setForm({ ...form, [property]: value });\r\n        // validation({...form, [property]:value},errors,setErrors);\r\n        if (property === \"email\") {\r\n            validateEmail({ ...form, [property]: value }, setErrors, errors);\r\n        } else {\r\n            validatePass({ ...form, [property]: value }, setErrors, errors);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler} className={styles.form}>\r\n                <div className={styles.contentEmail} >\r\n                    <label className={styles.label} htmlFor=\"email\">Email:</label>\r\n                    <input\r\n                        placeholder='Email aqui....'\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        value={form.email}\r\n                        onChange={handleChange}\r\n                        className={`${errors.email ? styles.error : styles.success}  ${styles.input}`}\r\n                    />\r\n                    <span className={styles.errorSpan}>{errors.email}</span>\r\n                </div>\r\n                <div className={styles.contentPassword}>\r\n                    <label className={styles.label} htmlFor=\"password\">Password:</label>\r\n                    <input\r\n                        placeholder='Password aqui...'\r\n                        type=\"password\"\r\n                        name='password'\r\n                        value={form.password}\r\n                        onChange={handleChange}\r\n                        className={`${errors.password ? styles.error : styles.success} ${styles.input}`}\r\n                    />\r\n                    <span className={styles.errorSpan}>{errors.password}</span>\r\n                </div>\r\n                <button className={styles.button} on type='submit'>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}