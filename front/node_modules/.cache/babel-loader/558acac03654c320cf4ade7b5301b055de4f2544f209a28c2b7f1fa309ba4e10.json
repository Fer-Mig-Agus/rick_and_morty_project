{"ast":null,"code":"import { ADD_FAVORITE, REMOVE_FAVORITE, ORDER_CARDS, FILTER_CARDS, ALL_FAVORITES } from \"../redux/actions.js\";\nconst initialState = {\n  allCharacters: [],\n  myFavorites: []\n};\nexport default function Reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ALL_FAVORITES:\n      return {\n        ...state,\n        allCharacters: state.myFavorites\n      };\n    case ADD_FAVORITE:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, action.payload]\n      };\n    case REMOVE_FAVORITE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(favorite => favorite.id !== action.payload)\n      };\n    case FILTER_CARDS:\n      if (action.payload !== \"All\") {\n        return {\n          ...state,\n          allCharacters: state.allCharacters.filter(char => char.gender === action.payload)\n        };\n      } else {\n        return {\n          ...state\n        };\n      }\n    case ORDER_CARDS:\n      return {\n        ...state,\n        allCharacters: ordenarArray(action.payload, state.allCharacters)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\n_c = Reducer;\nconst ordenarArray = (tipo, array) => {\n  if (tipo === \"Descendente\") {\n    for (let i = 0; i < array.length; i++) {\n      var miIndex = i;\n      for (let j = i + 1; j < array.length; j++) {\n        const valor1 = parseInt(array[j].id, 10);\n        const valor2 = parseInt(array[miIndex].id, 10);\n        if (valor1 > valor2) miIndex = j;\n      }\n      var aux = array[i];\n      array[i] = array[miIndex];\n      array[miIndex] = aux;\n    }\n    return array;\n  } else {\n    for (let i = 0; i < array.length; i++) {\n      var miIndex = i;\n      for (let j = i + 1; j < array.length; j++) {\n        const valor1 = parseInt(array[j].id, 10);\n        const valor2 = parseInt(array[miIndex].id, 10);\n        if (valor1 < valor2) miIndex = j;\n      }\n      var aux = array[i];\n      array[i] = array[miIndex];\n      array[miIndex] = aux;\n    }\n    return array;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["ADD_FAVORITE","REMOVE_FAVORITE","ORDER_CARDS","FILTER_CARDS","ALL_FAVORITES","initialState","allCharacters","myFavorites","Reducer","state","arguments","length","undefined","action","type","payload","filter","favorite","id","char","gender","ordenarArray","_c","tipo","array","i","miIndex","j","valor1","parseInt","valor2","aux","$RefreshReg$"],"sources":["C:/Desarrollo WEB/HENRY/Curso Full Time/Proyecto de Integracion/rick_and_morty/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAVORITE, REMOVE_FAVORITE, ORDER_CARDS, FILTER_CARDS, ALL_FAVORITES } from \"../redux/actions.js\";\r\n\r\nconst initialState = {\r\n    allCharacters: [],\r\n    myFavorites: [],\r\n}\r\n\r\nexport default function Reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case ALL_FAVORITES:\r\n            return {\r\n                ...state,\r\n                allCharacters: state.myFavorites\r\n            }\r\n\r\n        case ADD_FAVORITE:\r\n            return {\r\n                ...state,\r\n                myFavorites: [...state.myFavorites, action.payload]\r\n            };\r\n        case REMOVE_FAVORITE:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter(\r\n                    (favorite) => favorite.id !== action.payload\r\n                ),\r\n            };\r\n\r\n        case FILTER_CARDS:\r\n            if(action.payload !== \"All\"){\r\n                return {\r\n                    ...state,\r\n                    allCharacters: state.allCharacters.filter(\r\n                        (char) => char.gender === action.payload\r\n                    )\r\n    \r\n                }\r\n            }else{\r\n                return{\r\n                    ...state\r\n                }\r\n            }\r\n            \r\n            \r\n        \r\n        case ORDER_CARDS:\r\n\r\n            return {\r\n\r\n                ...state,\r\n                allCharacters: ordenarArray(action.payload, state.allCharacters)\r\n\r\n            }\r\n\r\n\r\n        default: return { ...state };\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst ordenarArray = (tipo, array) => {\r\n\r\n    if (tipo === \"Descendente\") {\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            var miIndex = i;\r\n            for (let j = i + 1; j < array.length; j++) {\r\n                const valor1 = parseInt(array[j].id, 10);\r\n                const valor2 = parseInt(array[miIndex].id, 10);\r\n                if (valor1 > valor2) miIndex = j;\r\n            }\r\n            var aux = array[i];\r\n            array[i] = array[miIndex];\r\n            array[miIndex] = aux;\r\n        }\r\n        \r\n        return array;\r\n\r\n    } else {\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            var miIndex = i;\r\n            for (let j = i + 1; j < array.length; j++) {\r\n                const valor1 = parseInt(array[j].id, 10);\r\n                const valor2 = parseInt(array[miIndex].id, 10);\r\n                if (valor1 < valor2) miIndex = j;\r\n            }\r\n            var aux = array[i];\r\n            array[i] = array[miIndex];\r\n            array[miIndex] = aux;\r\n        }\r\n    \r\n        return array;\r\n\r\n\r\n\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}